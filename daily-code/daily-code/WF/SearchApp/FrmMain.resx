<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ttpMain.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>501, 17</value>
  </metadata>
  <data name="label17.Text" xml:space="preserve">
    <value>2、搜索：
    1〉设置链接：找到能搜索到邮件地址的用户列表或帖子列表，并跳到第二页之后的任何一页，将该页邮件地址复制到列表输入框中，在模版地址页码输入框中输入该页面的页码。
    2〉选择搜索：选择要搜索的项目（Email或电话）。并设置各项参数。
    3〉深层搜索：如果页面有大量会员列表，要进入会员页面才能看到信息，那么就要用深层搜索来实现了。
    4〉开始搜索：信息都设置完毕点搜索按钮开始，中途可以停止。
    5〉导出结果：可分别导出搜索的结果，设置导出地址。</value>
  </data>
  <metadata name="sspMain.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>118, 17</value>
  </metadata>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>213, 17</value>
  </metadata>
  <metadata name="saveFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>357, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>62</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAqAwAAAAAAAAAAAAAAAAAAAAA
        AACseVGack/HspPKwqXJv6HgzaiyjWGzglC2i1jUm2S7jE/Wq2zkqHLfqYDZrY7Rl4TJpIjQoXvGjl3A
        hlK4gFG3flHLjFnWk1aceVeUcU/HpHm2iFK3fDe2dC2saim9fUamd1vUsJjn0r306tn16dfw2sHivJzd
        rIa3g1rFoG7ntYHgp3Pluof4yJ7/xqnJnYbjw6zuxaTdrYPDkma0g123hmDEjF3BgEmmdUWZaje1g06t
        dDaycCmxbCOpZCWsajWYcWLnyrzayL3k2dHx5dvo0cLxzLj1x6+4iWrGpID1x57qtYrYsYTovZa/i23V
        sJbu0bz/27//2rX7z6rtwqHjtZPbpHfLi1TcmFfNi0rKiUXFgDq9eC+6czCybzixcEO2nY3o08Tj1cnk
        2M756d364dHoxbH5z7i9nYaldV3vx6rqxqLfrYm2jGmTdFP6z7TszbT0zqz7zaT1x57ou5Xksojmqnbm
        n1/jllHZj0fLgTm7dS+gXBuTURyMTyeTWjrj1b7j1b7j1sDXybPeybPmy7HMp4vswqXt0r6xhnPXs5vx
        0bTYqIyrgWSmiWr707bjwJ/rv5b9yJX/x5Pxuofrr3nppWTnm0/YjkzWi0bKgjy2cC2KSxF0OhBlLxB1
        QSry58zj17vhzrPawqbPr5LPqYvDl3jesJHsy7fdxrCie2XYp5Hjv6fPp46md1zjw6bhv6HSpXrYnmPa
        mlrJi0vAgEDFfznUhjnVkFHUjUnZj0fLhkGqazGYXzKETCmWX0Dczrvhzrnixq7qxKzjtZ3ZpY7GjXfI
        j3npy7Dfyq6Vb1eebFjOqZPOo46IVkC+m4Hy2sjUrovao2rkpWHYllXEhkbAfj3Mh0LHg0LHgDbRhTPP
        hDXCfTe2dzusajXAfEfp18zs0sTZt6fYp5fhqZjpq5vQj4DMi33ey6izj3GvjnTCoImcZlXWpJBsRzGA
        Tznz5d/dv6TotYP3uXn0tnbusnfjqHDhpWrgm1bdkkPbjDHUhSrLfy28ciq4aybKejPs8OTi4tbi3M/Z
        yrrGq5fQp5DYpojBiGjMpIjbr5Kic1O4hmizhGmdcmGjfnapiIXi2dbh2czf1Ljv1qz5y5z5vY/0tIve
        oHrzn1fbnVfCk0/AhT/VgTXlhjfCciW+gzvRxbPu4dH/+Oj97eDq18jp0sLly7rTt6a6o4nIpYuQXkK1
        dVzVlH+xeWiuhHf629Lo9/Px6eLqyLvswaz20rT42LXwyqjer4/iqGayhFWlf13LmmrOiDvJeSDCeCq1
        djytjXC5m4DIrpbTwKvczb3b08bg3tTx7+fq4svgyLKkclynYEzViHXXk4CmcmGshHK/rqv04+D/7+zn
        zsrVurDhx7bv2r/n1rXgvpOwl32fh3XWsY/epmXHgzDCgTe5fkbXp33AlWq+l3DMrIjVwKHYzLTb18Xp
        6dvo3sz238/etqSudGGnY1DGgW6vcFuqcFqzcmmddGu/savx7Ont4dvl0MHu173n1LH028fWxau7rIzO
        sonZqHbQkVfSllTWolzFkFe7hk3KllrKmWHGm2jevZDs0q7m0bLUva7x2sr84tLZuKi5jnuud2KgXEXG
        fGTZlnvGh3Otd2y0lYzh1sj17Njs1LjvxKPr0bnjzq/eyKTUtIvYrH3YoW7KlFjPnF25gUC1ejXWmFLd
        n1jOklDcp27ouorkvZHt0cD85tT/+Ob67tzv28now6/Ah3GiXETLjm7YmHrhoYm8gW6odmTctZ/+38bm
        ya7x3Lb74MbnxrPKpYnhvY3LpWuabTqteVTNjUy7eDPRjEPemk/bmlXjq3DxwJL/27Tw3MP87tf/9OLv
        5dTg0cH23szrybKgd16nZE3Mk3nirI7oqI/lnIiwbV6UaFvJs6jp3cXs1srJqaO3lobcwJ7FqHyrhWLP
        oIXRikrPhkLckkrZkUvfn17ptYDmvZb00rTq5cb069Dt4s77697/7uH/8N//89zTxamZYlOucV3XlXze
        ooXKln+7jH7FkZHiqbLGv8TAtLDGs6bcxbbcxLi/opTNq5TTrIzKk0rKjEbcklDoml/so3HqrYXqvp/4
        2cDs2Mfz4NPp2dP06Ob/9vL58Ofh18bl2sTCt6l4TTi+dFzDfGjEoZfq6Oj1/v/u8fbgz7rVyLqmlo+v
        lYXqvZvyu4jhpm7co2vOlUrMjUPakkzjmFroom3nsIntx6n948v89eL++er7+PD7+vbs6eTq5tvk3crl
        2sTd1seykX2yeGKcaFfdysLy+fb0//3n6ePj0r3u4dPq2dDhxbTmuZTepXHZnWLfp2zNlEXLiz3YkUfh
        l1XioWrks4vpy7D55dP1+eb///Xw+O7u9u/l6ePSz8HCt6PayrPTxLTPq5nToY+JZFbLwbrx+PP7++/1
        59Tz5NHv4tT35drqy7bgr4fip2/WmFzRmFvLjj7IhjfVkEHemVDeombftIniyq7u4M7o6tfx9ufb49nj
        6uP29Ozl2MrNtKDty7PRrqHPoJK2gnWDX1fZzcn89u/n08H81rj77dvv4tT86dzryK7iroDwsXXfn1/W
        m13Iij7FgjPUjT3dl0rcoF7gtIXkyqzr3cvs49Xv6d7l49vv7Of37OT33M7it6TgqpHAlYapeGiEVUe/
        opv/+Pb37uXew67vwqDz5tb36d3/9OTzza/or3zwrGvamVXbnl7JiETDfjXQiTnYkUHYmlThsnzpy6jw
        28X8697/9+3x6eLp497m1s/ev7DDkXu9gGa5lYOWbluKZ1Plz8Pv6+bi4dfi0rv32rXw59n569/64tDn
        vZroq3Pqo1/VkErVlVTGhEnAejfPhTfVjDrVkkfeqm7mv5jrzrP25Nn///by7+ff39nd18zWvqy9kXnF
        jXDEn4mmfWaNZE3LsaHx5t7q5dzXzLj24cH58OP87uLlzLjXqoTkpWnmnFTXkknVllLBgEm9djfOgzfU
        ijjTjUDZoGLds4beu5rWyLz17uX8//j0/fPl59vr3crXtpy+kXDJmoWXZEpqNx3DmIf739ji0Mn04tH/
        7dP88+n77eHVvKjOoHfhoGPhlkzWj0XNjEjAhUe7fDjKgjrUiDzYikPelVfjoW7troLuvJ780rv/7uP9
        7Onm3Nzy6+j38Ofb0sWxmY2vlHqRZEKPUzWtfmmsm5K7vLr5+Pr/9+Hmx6jaq3/hpWrhmlrXi0nOgULS
        hku9f0O3dTTFfTXOgjbShTzYj0vcmF3kpG7osonqvZv42MH/8OP79e709ezx8ujq7d7r29X25ta3m4Oj
        eGOvjH9VSUNTT0737e3xz7HXrYjVoG7enWDbkk7Ogz/EeDbGfT+8e0S1cjXDejbMgDTOgzXTikDWkUvb
        nFjbn2PeqnXhupPs1rr47tz28+Tv8ODy9eX//frl49nZ0MP64tb/9O3t4NjWxbzixrvirIPVmmzZmV/d
        llPTiEPFejW8cy/AeTm0cUCtZzK5cDLEdzLGey/JgTPMhzjSkELYlUrfol7ap2/as4fsz7D748v+69b/
        8t3/+Ozh3tDl4NH/8eL/7t364MjkwKLLlXTjnWfbkljakFDThULGeTS4byuwaiezcDGtZz+kXTGvZjK4
        bzO7ci7DejDEfzDLhjfckkTblErVk1LTlV/aoXTirInqt5f0wKLkya7f0bXWx63UtpvTqYbKnG3RmGDt
        pGjllVbbi0rUhEPFdzW3bS2sZyijYSamZy2fWjmWUCudVy+lYC+rZCuzbC25cCzAeDLJfTXMgTzSiEbX
        jlDbkVnhmGbooHHvpnrYroT627T106/RnnbPkF3go2HinVTWhTrSgT3IeTa+cTKvZiqlXymbWieQUiKV
        WSuTUDWGRCeNSiuUUCuZVCmjWyurYSmzaS+0bDC/djjIfj7KgD7OhELSi0jWj0/XkFDPnW//6L7/3bTf
        nG/bjlXRi0XBfTDOhTu7bimzZyWpYSWbViSTUiWLTSWERiKMTy2bW0ONTTWRUTiWVjidWDenYTmxZji7
        bj21cTy9eD+/eT3DfTrJhTzKiT7LjUHRlUnEj2TRo3rVoHvUiV3SgEbNhT/AgTe3djG+djC1bi6raC+e
        Xi6WWDKNUjKKTjGaXUMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>